// <auto-generated />
using System;
using MasterNet9.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MasterNet9.Persistence.Migrations
{
    [DbContext(typeof(MasterNet9DbContext))]
    partial class MasterNet9DbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.3");

            modelBuilder.Entity("MasterNet9.Domain.Calificacion", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Alumno")
                        .HasColumnType("TEXT");

                    b.Property<string>("Comentario")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("CursoId")
                        .HasColumnType("TEXT");

                    b.Property<int>("Puntaje")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("CursoId");

                    b.ToTable("calificaciones", (string)null);
                });

            modelBuilder.Entity("MasterNet9.Domain.Curso", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Descripcion")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("FechaPublicacion")
                        .HasColumnType("TEXT");

                    b.Property<string>("Titulo")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("cursos", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("0d8c8533-968a-4829-abb8-2337ea9cbbde"),
                            Descripcion = "The slim & simple Maple Gaming Keyboard from Dev Byte comes with a sleek body and 7- Color RGB LED Back-lighting for smart functionality",
                            FechaPublicacion = new DateTime(2025, 9, 15, 21, 27, 0, 915, DateTimeKind.Utc).AddTicks(9304),
                            Titulo = "Practical Metal Chips"
                        },
                        new
                        {
                            Id = new Guid("f894ab66-b48c-4212-9ca8-71ae418dda37"),
                            Descripcion = "The Football Is Good For Training And Recreational Purposes",
                            FechaPublicacion = new DateTime(2025, 9, 15, 21, 27, 0, 915, DateTimeKind.Utc).AddTicks(9508),
                            Titulo = "Handmade Cotton Pizza"
                        },
                        new
                        {
                            Id = new Guid("226fde9f-51b3-42cf-b99c-22a44ce09eee"),
                            Descripcion = "The slim & simple Maple Gaming Keyboard from Dev Byte comes with a sleek body and 7- Color RGB LED Back-lighting for smart functionality",
                            FechaPublicacion = new DateTime(2025, 9, 15, 21, 27, 0, 915, DateTimeKind.Utc).AddTicks(9519),
                            Titulo = "Unbranded Frozen Pants"
                        },
                        new
                        {
                            Id = new Guid("a03c3a47-2861-4fad-94cf-a4112d026883"),
                            Descripcion = "New range of formal shirts are designed keeping you in mind. With fits and styling that will make you stand apart",
                            FechaPublicacion = new DateTime(2025, 9, 15, 21, 27, 0, 915, DateTimeKind.Utc).AddTicks(9527),
                            Titulo = "Practical Frozen Shirt"
                        },
                        new
                        {
                            Id = new Guid("fa74f9cd-0292-4616-b44e-2804734ba65a"),
                            Descripcion = "The automobile layout consists of a front-engine design, with transaxle-type transmissions mounted at the rear of the engine and four wheel drive",
                            FechaPublicacion = new DateTime(2025, 9, 15, 21, 27, 0, 915, DateTimeKind.Utc).AddTicks(9534),
                            Titulo = "Handmade Granite Fish"
                        },
                        new
                        {
                            Id = new Guid("ab53dd05-7558-4b26-9c6c-f382551a5ba5"),
                            Descripcion = "New ABC 13 9370, 13.3, 5th Gen CoreA5-8250U, 8GB RAM, 256GB SSD, power UHD Graphics, OS 10 Home, OS Office A & J 2016",
                            FechaPublicacion = new DateTime(2025, 9, 15, 21, 27, 0, 915, DateTimeKind.Utc).AddTicks(9543),
                            Titulo = "Practical Granite Towels"
                        },
                        new
                        {
                            Id = new Guid("c058bdb3-2fb2-4379-8daf-c25873e2248b"),
                            Descripcion = "Carbonite web goalkeeper gloves are ergonomically designed to give easy fit",
                            FechaPublicacion = new DateTime(2025, 9, 15, 21, 27, 0, 915, DateTimeKind.Utc).AddTicks(9550),
                            Titulo = "Rustic Soft Ball"
                        },
                        new
                        {
                            Id = new Guid("c4777f59-83a3-4e9d-a9e1-42bcdbaa4d96"),
                            Descripcion = "Andy shoes are designed to keeping in mind durability as well as trends, the most stylish range of shoes & sandals",
                            FechaPublicacion = new DateTime(2025, 9, 15, 21, 27, 0, 915, DateTimeKind.Utc).AddTicks(9563),
                            Titulo = "Unbranded Cotton Gloves"
                        },
                        new
                        {
                            Id = new Guid("e846092c-0f15-4281-ade7-5a2b5f3bd537"),
                            Descripcion = "The Nagasaki Lander is the trademarked name of several series of Nagasaki sport bikes, that started with the 1984 ABC800J",
                            FechaPublicacion = new DateTime(2025, 9, 15, 21, 27, 0, 915, DateTimeKind.Utc).AddTicks(9572),
                            Titulo = "Refined Concrete Pizza"
                        });
                });

            modelBuilder.Entity("MasterNet9.Domain.CursoInstructor", b =>
                {
                    b.Property<Guid>("InstructorId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("CursoId")
                        .HasColumnType("TEXT");

                    b.HasKey("InstructorId", "CursoId");

                    b.HasIndex("CursoId");

                    b.ToTable("cursos_instructores", (string)null);
                });

            modelBuilder.Entity("MasterNet9.Domain.CursoPrecio", b =>
                {
                    b.Property<Guid>("PrecioId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("CursoId")
                        .HasColumnType("TEXT");

                    b.HasKey("PrecioId", "CursoId");

                    b.HasIndex("CursoId");

                    b.ToTable("cursos_precios", (string)null);
                });

            modelBuilder.Entity("MasterNet9.Domain.Instructor", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Apellidos")
                        .HasColumnType("TEXT");

                    b.Property<string>("Grado")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nombre")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("instructores", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("5a4e4f0e-7220-43f5-ad4c-0fec2efda9ae"),
                            Apellidos = "Marvin",
                            Grado = "Legacy Brand Associate",
                            Nombre = "Talon"
                        },
                        new
                        {
                            Id = new Guid("740d9366-393d-4b1c-86be-639d2c572d16"),
                            Apellidos = "Bednar",
                            Grado = "Lead Tactics Assistant",
                            Nombre = "Danial"
                        },
                        new
                        {
                            Id = new Guid("607d6af1-8df0-4a68-8935-5d6fa351ed50"),
                            Apellidos = "Hintz",
                            Grado = "Lead Program Associate",
                            Nombre = "Brenden"
                        },
                        new
                        {
                            Id = new Guid("fdc2c6aa-e00f-4b58-94dc-6244252a33ee"),
                            Apellidos = "Murphy",
                            Grado = "Central Program Strategist",
                            Nombre = "Loyal"
                        },
                        new
                        {
                            Id = new Guid("c16a56cc-77e9-4452-b2b2-e1a292a46e5d"),
                            Apellidos = "Connelly",
                            Grado = "Future Research Consultant",
                            Nombre = "Nella"
                        },
                        new
                        {
                            Id = new Guid("c2e3acd2-a2d3-419d-843f-a2a3471ff9e2"),
                            Apellidos = "Quigley",
                            Grado = "Forward Implementation Executive",
                            Nombre = "Raegan"
                        },
                        new
                        {
                            Id = new Guid("4aa23af3-efa7-4c06-9e04-b0c371debd30"),
                            Apellidos = "Rath",
                            Grado = "Central Accounts Manager",
                            Nombre = "Cortney"
                        },
                        new
                        {
                            Id = new Guid("026b074e-9cce-4043-93ee-7aff88337e07"),
                            Apellidos = "Muller",
                            Grado = "Lead Assurance Facilitator",
                            Nombre = "Estell"
                        },
                        new
                        {
                            Id = new Guid("a5dd683c-4d30-44e8-8bac-c09fa620b216"),
                            Apellidos = "Douglas",
                            Grado = "Senior Quality Orchestrator",
                            Nombre = "Rosalinda"
                        },
                        new
                        {
                            Id = new Guid("66b271a9-1571-4406-8b97-35b180c292fe"),
                            Apellidos = "Schoen",
                            Grado = "Dynamic Creative Technician",
                            Nombre = "Gillian"
                        });
                });

            modelBuilder.Entity("MasterNet9.Domain.Photo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("CursoId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Url")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CursoId");

                    b.ToTable("imagenes", (string)null);
                });

            modelBuilder.Entity("MasterNet9.Domain.Precio", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Nombre")
                        .HasMaxLength(250)
                        .HasColumnType("VARCHAR");

                    b.Property<decimal>("PrecioActual")
                        .HasPrecision(10, 2)
                        .HasColumnType("TEXT");

                    b.Property<decimal>("PrecioPromocion")
                        .HasPrecision(10, 2)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("precios", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("96e21548-dbbd-466e-8b15-d30a7b19f1ac"),
                            Nombre = "Precio Regular",
                            PrecioActual = 10.0m,
                            PrecioPromocion = 8.0m
                        });
                });

            modelBuilder.Entity("MasterNet9.Domain.Calificacion", b =>
                {
                    b.HasOne("MasterNet9.Domain.Curso", "Curso")
                        .WithMany("Calificaciones")
                        .HasForeignKey("CursoId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Curso");
                });

            modelBuilder.Entity("MasterNet9.Domain.CursoInstructor", b =>
                {
                    b.HasOne("MasterNet9.Domain.Curso", "Curso")
                        .WithMany("CursoInstructores")
                        .HasForeignKey("CursoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MasterNet9.Domain.Instructor", "Instructor")
                        .WithMany("CursoInstructores")
                        .HasForeignKey("InstructorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Curso");

                    b.Navigation("Instructor");
                });

            modelBuilder.Entity("MasterNet9.Domain.CursoPrecio", b =>
                {
                    b.HasOne("MasterNet9.Domain.Curso", "Curso")
                        .WithMany("CursoPrecios")
                        .HasForeignKey("CursoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MasterNet9.Domain.Precio", "Precio")
                        .WithMany("CursoPrecios")
                        .HasForeignKey("PrecioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Curso");

                    b.Navigation("Precio");
                });

            modelBuilder.Entity("MasterNet9.Domain.Photo", b =>
                {
                    b.HasOne("MasterNet9.Domain.Curso", "Curso")
                        .WithMany("Photos")
                        .HasForeignKey("CursoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Curso");
                });

            modelBuilder.Entity("MasterNet9.Domain.Curso", b =>
                {
                    b.Navigation("Calificaciones");

                    b.Navigation("CursoInstructores");

                    b.Navigation("CursoPrecios");

                    b.Navigation("Photos");
                });

            modelBuilder.Entity("MasterNet9.Domain.Instructor", b =>
                {
                    b.Navigation("CursoInstructores");
                });

            modelBuilder.Entity("MasterNet9.Domain.Precio", b =>
                {
                    b.Navigation("CursoPrecios");
                });
#pragma warning restore 612, 618
        }
    }
}
